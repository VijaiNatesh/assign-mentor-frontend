{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\MentorStudent\\\\frontend\\\\mentorstudentfrontend\\\\src\\\\component\\\\changementorforstudent\\\\Changementorforstudent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchStudents } from \"../../redux/action/student/studentAction.js\";\nimport { fetchMentors } from '../../redux/action/mentor/mentorAction.js';\nimport styles from '../../myStyles.module.css';\nimport { changeMentorforstudent } from '../../redux/action/changementorforstudent/changementorforstudentAction.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Changementorforstudent() {\n  _s();\n\n  const [studentSelected, setStudentSelected] = useState([]);\n  const [mentorSelected, setMentorSelected] = useState();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchStudents());\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(fetchMentors());\n  }, [dispatch]);\n  const studentsList = useSelector(state => state.student);\n  const {\n    students\n  } = studentsList;\n  console.log(students);\n  const mentorsList = useSelector(state => state.mentor);\n  const {\n    mentors\n  } = mentorsList;\n  console.log(mentors);\n\n  const checkboxHandler = e => {\n    setStudentsAssigned(prev => {\n      if (e.target.checked === true) {\n        if (!studentSelected.includes(e.target.value)) {\n          return [...prev, e.target.value];\n        }\n      }\n    });\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    console.log(studentSelected, mentorSelected);\n    const changeData = {\n      studentId: studentSelected,\n      newMentorId: mentorSelected\n    };\n    await dispatch(changeMentorforstudent(changeData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.stumen,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Mentor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setMentorSelected(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select Mentor \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), mentors && mentors.map(mentor => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: mentor && mentor._id,\n            children: mentor.name\n          }, mentor._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.stumen,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), students && students.map(stu => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: stu && stu._id,\n            onChange: e => setStudentSelected(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), stu.name]\n        }, stu._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.stumen,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Changementorforstudent, \"Vjo8pdrAreznCvOMULHqTVTmd74=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Changementorforstudent;\nexport default Changementorforstudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"Changementorforstudent\");","map":{"version":3,"sources":["D:/React/MentorStudent/frontend/mentorstudentfrontend/src/component/changementorforstudent/Changementorforstudent.js"],"names":["React","useState","useEffect","useDispatch","useSelector","fetchStudents","fetchMentors","styles","changeMentorforstudent","Changementorforstudent","studentSelected","setStudentSelected","mentorSelected","setMentorSelected","dispatch","studentsList","state","student","students","console","log","mentorsList","mentor","mentors","checkboxHandler","e","setStudentsAssigned","prev","target","checked","includes","value","submitHandler","preventDefault","changeData","studentId","newMentorId","stumen","map","_id","name","stu"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { fetchStudents } from \"../../redux/action/student/studentAction.js\"\r\nimport { fetchMentors } from '../../redux/action/mentor/mentorAction.js';\r\nimport styles from '../../myStyles.module.css'\r\nimport { changeMentorforstudent } from '../../redux/action/changementorforstudent/changementorforstudentAction.js';\r\n\r\n\r\nfunction Changementorforstudent() {\r\n\r\n    const [studentSelected, setStudentSelected] = useState([])\r\n    const [mentorSelected, setMentorSelected] = useState()\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(fetchStudents())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchMentors())\r\n    }, [dispatch])\r\n\r\n    const studentsList = useSelector(state => state.student)\r\n    const { students } = studentsList\r\n    console.log(students)\r\n\r\n\r\n    const mentorsList = useSelector(state => state.mentor)\r\n    const { mentors } = mentorsList\r\n    console.log(mentors)\r\n    const checkboxHandler = (e) => {\r\n        setStudentsAssigned((prev) => {\r\n            if (e.target.checked === true) {\r\n                if (!studentSelected.includes(e.target.value)) {\r\n                    return [...prev, e.target.value];\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    const submitHandler = async(e) => {\r\n        e.preventDefault();\r\n        console.log(studentSelected, mentorSelected)\r\n\r\n        const changeData = {\r\n            studentId: studentSelected,\r\n            newMentorId: mentorSelected\r\n        }\r\n        await dispatch(changeMentorforstudent(changeData))\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.stumen}>\r\n                <label>Select Mentor</label>\r\n                <select onChange={(e) => setMentorSelected(e.target.value)}>\r\n                    <option>Select Mentor </option>\r\n                    {mentors && mentors.map(mentor => {\r\n                        return (\r\n                            <option value={mentor && mentor._id} key={mentor._id}>\r\n                                {mentor.name}\r\n                            </option>\r\n                        )\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            <div className={styles.stumen}>\r\n                <label>Select Students</label>\r\n                {students && students.map(stu => {\r\n                    return (\r\n                        <li key={stu._id}>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                value={stu && stu._id}\r\n                                onChange={(e) => setStudentSelected(e.target.value)}\r\n                            />\r\n                            {stu.name}\r\n                        </li>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className={styles.stumen}>\r\n                <button onClick={submitHandler}>Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Changementorforstudent\r\n"]},"metadata":{},"sourceType":"module"}